// <auto-generated />
using System;
using Db_FrontDeskApp.DataConfig;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Db_FrontDeskApp.Migrations
{
    [DbContext(typeof(DbConfig))]
    partial class DbConfigModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Db_FrontDeskApp.Model.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Db_FrontDeskApp.Model.Facility", b =>
                {
                    b.Property<int>("FacilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacilityId"));

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LargeCapacity")
                        .HasColumnType("int");

                    b.Property<int>("LargeRemainingCapacity")
                        .HasColumnType("int");

                    b.Property<int>("MediumCapacity")
                        .HasColumnType("int");

                    b.Property<int>("MediumRemainingCapacity")
                        .HasColumnType("int");

                    b.Property<int>("SmallCapacity")
                        .HasColumnType("int");

                    b.Property<int>("SmallRemainingCapacity")
                        .HasColumnType("int");

                    b.HasKey("FacilityId");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("Db_FrontDeskApp.Model.StoredPackage", b =>
                {
                    b.Property<int>("StoredPackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoredPackageId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("FacilityId")
                        .HasColumnType("int");

                    b.Property<int>("PackageSize")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RetrievedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("RetrievedPackage")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StoredDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StoredPackageId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("FacilityId");

                    b.ToTable("StoredPackages");
                });

            modelBuilder.Entity("Db_FrontDeskApp.Model.StoredPackage", b =>
                {
                    b.HasOne("Db_FrontDeskApp.Model.Customer", "CustomerLink")
                        .WithMany("PackageList")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Db_FrontDeskApp.Model.Facility", "FacilityLink")
                        .WithMany("PackageList")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerLink");

                    b.Navigation("FacilityLink");
                });

            modelBuilder.Entity("Db_FrontDeskApp.Model.Customer", b =>
                {
                    b.Navigation("PackageList");
                });

            modelBuilder.Entity("Db_FrontDeskApp.Model.Facility", b =>
                {
                    b.Navigation("PackageList");
                });
#pragma warning restore 612, 618
        }
    }
}
